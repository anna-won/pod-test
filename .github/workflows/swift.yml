name: master-merged-action

env:
  PROJECT_NAME: ${{ 'PodFrameworkTest' }}
  OUTPUTFOLDER: ${{ './Frameworks' }}
  PROJECT_STYLE: ${{ 'project' }}
  PFOJECT_FILE: ${{ 'xcodeproj' }}
  
  BUILD_CERTIFICATE_BASE64: ${{ 'developCert.p12' }}
  P12_PASSWORD: ${{ '1111' }}
  BUILD_PROVISION_PROFILE_BASE64: ${{ 'skt_wile.mobileprovision' }}
  KEYCHAIN_PASSWORD: ${{ '1111' }}
  
  CERTIFICATE_PATH: ${{ './build_certificate.p12' }}
  PP_PATH: ${{ 'build_pp.mobileprovision' }}
  KEYCHAIN_PATH: ${{ 'app-signing.keychain-db' }}
  
  KEYCHAIN: ${{ 'test.keychain' }}
  DECRYPTED_CERTS_FILE_PATH: ${{ '.github/secret/developCert.p12' }} 
  ENCRYPTED_CERTS_FILE_PATH: ${{ '.github/secret/developCert.p12.gpg' }} 
  DECRYPTED_PROVISION_FILE_PATH: ${{ '.github/secret/skt_wile.mobileprovision' }} 
  ENCRYPTED_PROVISION_FILE_PATH: ${{ '.github/secret/skt_wile.mobileprovision.gpg' }} 
  CERTS_ENCRYPTION_PWD: ${{ secrets.CERT_PASSWORD }} 
  PROVISION_ENCRYPTION_PWD: ${{ secrets.CERT_PASSWORD }} 
  CERTS_EXPORT_PWD: ${{ secrets.CERT_PASSWORD }}

  

on:
 push:
   branches: [ master ]
#   pull_request:
#     branches: [ master ]
#     types : [ closed ]

jobs:
  build:
#     if: github.event.pull_request.merged == true
    runs-on: macos-latest

    steps:
     - uses: actions/checkout@v2
     - name: Configure Keychain
       run: |
          security create-keychain -p "" "$KEYCHAIN" 
          security list-keychains -s "$KEYCHAIN" 
          security default-keychain -s "$KEYCHAIN" 
          security unlock-keychain -p "" "$KEYCHAIN" 
          security set-keychain-settings
#      - name: Set Xcode Version 
#        run: sudo xcode-select -s /Applications/Xcode_12.5.1.app
     - name: Configure Certificate 
       run: |
          gpg -d -o "$DECRYPTED_CERTS_FILE_PATH" --pinentry-mode=loopback --passphrase "$CERTS_ENCRYPTION_PWD" "$ENCRYPTED_CERTS_FILE_PATH" 
          gpg -d -o "$DECRYPTED_PROVISION_FILE_PATH" --pinentry-mode=loopback --passphrase "$PROVISION_ENCRYPTION_PWD" "$ENCRYPTED_PROVISION_FILE_PATH" 
          security import "$DECRYPTED_CERTS_FILE_PATH" -k "$KEYCHAIN" -P "$CERTS_EXPORT_PWD" -A 
          security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN" 
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles" 
          cd ".github/secrets" 
          echo `ls *.mobileprovision` 
            for PROVISION in `ls *.mobileprovision` 
            do echo Hello, world! UUID=`/usr/libexec/PlistBuddy -c 
              'Print :UUID' /dev/stdin <<< $(security cms -D -i ./$PROVISION)` 
              cp "./$PROVISION" "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision" 
            done

     - name: Test Code
       run: |
          xcodebuild test -project "PodFrameworkTest.xcodeproj" -scheme "PodFrameworkTest" -destination "platform=iOS Simulator,name=iPhone 11"
     - name: Archive 
       run: |
          xcodebuild archive -$PROJECT_STYLE $PROJECT_NAME.$PFOJECT_FILE -scheme $PROJECT_NAME -configuration "Debug" -destination="generic/platform=iOS" -archivePath $OUTPUTFOLDER/ios.xcarchive -derivedDataPath /tmp/iphoneos -sdk iphoneos arch=arm64 SKIP_INSTALL=NO BUILD_LIBRARIES_FOR_DISTRIBUTION=YES 
          xcodebuild archive -$PROJECT_STYLE $PROJECT_NAME.$PFOJECT_FILE -scheme $PROJECT_NAME -configuration "Debug" -destination="generic/platform=iOS Simulator" -archivePath $OUTPUTFOLDER/iossimulator.xcarchive -derivedDataPath /tmp/iphonesimulator -sdk iphonesimulator arch=x86_64 SKIP_INSTALL=NO BUILD_LIBRARIES_FOR_DISTRIBUTION=YES 
     - name: Universal Framework
       run: |
          xcodebuild -create-xcframework -framework $OUTPUTFOLDER/ios.xcarchive/Products/Library/Frameworks/$PROJECT_NAME.framework -framework $OUTPUTFOLDER/iossimulator.xcarchive/Products/Library/Frameworks/$PROJECT_NAME.framework  -output $OUTPUTFOLDER/$PROJECT_NAME.xcframework


 
