name: master-merged-action

env:
  PROJECT_NAME: ${{ 'PodFrameworkTest' }}
  OUTPUTFOLDER: ${{ './Frameworks' }}
  PROJECT_STYLE: ${{ 'project' }}
  PFOJECT_FILE: ${{ 'xcodeproj' }}
  
  BUILD_CERTIFICATE_BASE64: ${{ 'developCert.p12' }}
  P12_PASSWORD: ${{ '1111' }}
  BUILD_PROVISION_PROFILE_BASE64: ${{ 'skt_wile.mobileprovision' }}
 
  
  CERTIFICATE_PATH: ${{ '.github/secret/build_certificate.p12' }}
  PP_PATH: ${{ '.github/secret/build_pp.mobileprovision' }}
  KEYCHAIN_PATH: ${{ '.github/secret/app-signing.keychain-db' }}
  
  KEYCHAIN: ${{ 'test.keychain' }}
  DECRYPTED_CERTS_FILE_PATH: ${{ '.github/secret/developCert.p12' }} 
  ENCRYPTED_CERTS_FILE_PATH: ${{ '.github/secret/developCert.p12.gpg' }} 
  DECRYPTED_PROVISION_FILE_PATH: ${{ '.github/secret/skt_wile.mobileprovision' }} 
  ENCRYPTED_PROVISION_FILE_PATH: ${{ '.github/secret/skt_wile.mobileprovision.gpg' }} 
  
  CERTS_BASE64: ${{ secrets.DEVELOP_CERT }}
  PROVS_BASE64: ${{ secrets.BASE64_PROVISIONING }}
  CERTS_ENCRYPTION_PWD: ${{ secrets.CERT_PASSWORD }} 
  PROVISION_ENCRYPTION_PWD: ${{ secrets.CERT_PASSWORD }} 
  CERTS_EXPORT_PWD: ${{ secrets.CERT_PASSWORD }}
  KEYCHAIN_PASSWORD: ${{ secrets.CERT_PASSWORD }}
  XC_EXPORT_PATH: ${{ './artifacts' }}


on:
 push:
   branches: [ master ]
#   pull_request:
#     branches: [ master ]
#     types : [ closed ]

jobs:
  build:
#     if: github.event.pull_request.merged == true
    runs-on: macos-latest

    steps:
     - uses: actions/checkout@v2
     - name: Base64 Test
       run: |
           echo -n "$CERTS_BASE64" | base64 --decode --output $CERTIFICATE_PATH
           echo -n "$PROVS_BASE64" | base64 --decode --output $PP_PATH
          
     - name: Configure Keychain
       run: |
          security create-keychain -p "" "$KEYCHAIN"
          security list-keychains -s "$KEYCHAIN"
          security default-keychain -s "$KEYCHAIN"
          security unlock-keychain -p "" "$KEYCHAIN"
          security set-keychain-settings
          
  #        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
  #        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
  #        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
       
       
        #  security create-keychain -p "" "$KEYCHAIN" 
        #  security list-keychains -s "$KEYCHAIN" 
        #  security default-keychain -s "$KEYCHAIN" 
        #  security unlock-keychain -p "" "$KEYCHAIN" 
        #  security set-keychain-settings
#      - name: Set Xcode Version 
#        run: sudo xcode-select -s /Applications/Xcode_12.5.1.app
     - name: Configure p12
       run: |    
          security import "$CERTIFICATE_PATH" -k "$KEYCHAIN" -P "$CERTS_EXPORT_PWD" -A
          security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN"
          
     #  security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
     #     security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k <your-password> build.keychain
     #     security import $CERTIFICATE_PATH -P "$CERTS_ENCRYPTION_PWD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
     #     security list-keychain -d user -s $KEYCHAIN_PATH
      
          
     - name: Configure Provisioning
       run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          
  #   - name: Test Code
  #     run: |
  #        xcodebuild test -project "PodFrameworkTest.xcodeproj" -scheme "PodFrameworkTest" -destination "platform=iOS Simulator,name=iPhone 11"
     - name: Archive 
       run: |
          mkdir artifacts
          xcodebuild archive -"$PROJECT_STYLE" "$PROJECT_NAME"."$PFOJECT_FILE" -scheme "$PROJECT_NAME" -configuration "Debug" -destination="generic/platform=iOS" -archivePath "$XC_EXPORT_PATH"/ios.xcarchive -derivedDataPath /tmp/iphoneos -sdk iphoneos arch=arm64 SKIP_INSTALL=NO BUILD_LIBRARIES_FOR_DISTRIBUTION=YES 
          xcodebuild archive -"$PROJECT_STYLE" "$PROJECT_NAME"."$PFOJECT_FILE" -scheme "$PROJECT_NAME" -configuration "Debug" -destination="generic/platform=iOS Simulator" -archivePath "$XC_EXPORT_PATH"/iossimulator.xcarchive -derivedDataPath /tmp/iphonesimulator -sdk iphonesimulator arch=x86_64 SKIP_INSTALL=NO BUILD_LIBRARIES_FOR_DISTRIBUTION=YES 
     - name: Upload Artifact 
       uses: actions/upload-artifact@v2
       with: 
        name: Artifacts
        path: ./artifacts


 # xcodebuild -create-xcframework -framework .github/secret/ios.xcarchive/Products/Library/Frameworks/$PROJECT_NAME.framework -framework .github/secret/iossimulator.xcarchive/Products/Library/Frameworks/$PROJECT_NAME.framework  -output "$PROJECT_NAME".xcframework
   
 
